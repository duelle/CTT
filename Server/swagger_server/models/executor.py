# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Executor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, status: str=None, project_id: int=None, deployment_id: int=None):  # noqa: E501
        """Executor - a model defined in Swagger

        :param id: The id of this Executor.  # noqa: E501
        :type id: int
        :param status: The status of this Executor.  # noqa: E501
        :type status: str
        :param project_id: The project_id of this Executor.  # noqa: E501
        :type project_id: int
        :param deployment_id: The deployment_id of this Executor.  # noqa: E501
        :type deployment_id: int
        """
        self.swagger_types = {
            'id': int,
            'status': str,
            'project_id': int,
            'deployment_id': int
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'project_id': 'projectId',
            'deployment_id': 'deploymentId'
        }
        self._id = id
        self._status = status
        self._project_id = project_id
        self._deployment_id = deployment_id

    @classmethod
    def from_dict(cls, dikt) -> 'Executor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Executor of this Executor.  # noqa: E501
        :rtype: Executor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Executor.


        :return: The id of this Executor.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Executor.


        :param id: The id of this Executor.
        :type id: int
        """

        self._id = id

    @property
    def status(self) -> str:
        """Gets the status of this Executor.


        :return: The status of this Executor.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this Executor.


        :param status: The status of this Executor.
        :type status: str
        """

        self._status = status

    @property
    def project_id(self) -> int:
        """Gets the project_id of this Executor.


        :return: The project_id of this Executor.
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id: int):
        """Sets the project_id of this Executor.


        :param project_id: The project_id of this Executor.
        :type project_id: int
        """

        self._project_id = project_id

    @property
    def deployment_id(self) -> int:
        """Gets the deployment_id of this Executor.


        :return: The deployment_id of this Executor.
        :rtype: int
        """
        return self._deployment_id

    @deployment_id.setter
    def deployment_id(self, deployment_id: int):
        """Sets the deployment_id of this Executor.


        :param deployment_id: The deployment_id of this Executor.
        :type deployment_id: int
        """

        self._deployment_id = deployment_id
