# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class POSTDeployments(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, testartifact_id: int=None):  # noqa: E501
        """POSTDeployments - a model defined in Swagger

        :param testartifact_id: The testartifact_id of this POSTDeployments.  # noqa: E501
        :type testartifact_id: int
        """
        self.swagger_types = {
            'testartifact_id': int
        }

        self.attribute_map = {
            'testartifact_id': 'testartifactId'
        }
        self._testartifact_id = testartifact_id

    @classmethod
    def from_dict(cls, dikt) -> 'POSTDeployments':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The POSTDeployments of this POSTDeployments.  # noqa: E501
        :rtype: POSTDeployments
        """
        return util.deserialize_model(dikt, cls)

    @property
    def testartifact_id(self) -> int:
        """Gets the testartifact_id of this POSTDeployments.


        :return: The testartifact_id of this POSTDeployments.
        :rtype: int
        """
        return self._testartifact_id

    @testartifact_id.setter
    def testartifact_id(self, testartifact_id: int):
        """Sets the testartifact_id of this POSTDeployments.


        :param testartifact_id: The testartifact_id of this POSTDeployments.
        :type testartifact_id: int
        """
        if testartifact_id is None:
            raise ValueError("Invalid value for `testartifact_id`, must not be `None`")  # noqa: E501

        self._testartifact_id = testartifact_id
